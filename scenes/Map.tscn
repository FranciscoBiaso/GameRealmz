[gd_scene load_steps=3 format=2]

[ext_resource path="res://scenes/Thing.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

export (PackedScene) var _thing

var g_thing_types = []
var g_stuff_book = {}
var g_img_pack = {}
var g_map_things = {}

func read_json_array_from_txt(txt) -> Array:
	var data_parse = JSON.parse(txt)
	if data_parse.error != OK:
		return []
	return data_parse.result

func read_json_dictionary_from_txt(txt) -> Dictionary:
	var data_parse = JSON.parse(txt)
	if data_parse.error != OK:
		return {}
	return data_parse.result

func read_txt_from_file(path) -> String:
	var data_file = File.new()
	if data_file.open(path, File.READ) != OK:
		return \"\"
	var data_text = data_file.get_as_text()
	data_file.close()
	return data_text

# Called when the node enters the scene tree for the first time.
func _ready():
	g_img_pack = read_json_dictionary_from_txt(read_txt_from_file(\"map/default/img_pack.json\"))
	g_stuff_book = read_json_dictionary_from_txt(read_txt_from_file(\"map/default/stuff_book.json\"))
	g_map_things = read_json_dictionary_from_txt(read_txt_from_file(\"map/default/map_things.json\"))	
	#g_map_units = read_json_array_from_txt(g_map_things[\"map_units\"])
	
	var img = Image.new()
	img.load(\"map/default/textureAtlas.png\")
		
	for obj in g_map_things[\"map_units\"]:
		var item = obj[\"items\"][0]
		var img_thing = g_stuff_book[item][\"img_ptr\"]
		var obj_position = Vector2(obj[\"x\"] * 32,obj[\"y\"] * 32)
		var thing = _thing.instance()
		thing.position = obj_position
		var rect = Rect2(g_img_pack[img_thing][\"0_ref_x\"] * 32,g_img_pack[img_thing][\"0_ref_y\"] * 32,32,32)
		var texture = ImageTexture.new()
		texture.create_from_image(img.get_rect(rect),0)
		thing.get_node(\"Sprite\").set_texture(texture)
		add_child(thing)
"

[node name="Map" type="Node"]
script = SubResource( 1 )
_thing = ExtResource( 2 )
